/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.assertj:assertj-core:3.18.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'io.javalin:javalin:3.12.0'
    implementation "com.fasterxml.jackson.core:jackson-databind:2.10.3"
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'com.konghq:unirest-java:3.11.04:standalone'
}

application {
    // Define the main class for the application.
    //noinspection GroovyAssignabilityCheck
    mainClass = 'shakemon.Main'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
